var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import { n as noop, a as safe_not_equal, b as subscribe, r as run_all, i as is_function, c as create_ssr_component, v as validate_component } from "../../chunks/index-a04dc3f0.js";
const subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run, invalidate = noop) {
    const subscriber = [run, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let inited = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {
      values[i] = value;
      pending &= ~(1 << i);
      if (inited) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    inited = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
    };
  });
}
const screenW = writable(900);
const mobileThreshold = writable(900);
derived([screenW, mobileThreshold], ([$screenW, $mobileThreshold]) => $screenW < $mobileThreshold);
const setAsync = async (key, value) => {
  return;
};
const localStorageStore = (key, value) => {
  const _a = writable(value, () => {
    return;
  }), { set: setStore } = _a, readableStore = __objRest(_a, ["set"]);
  const set = async (value2) => {
    setStore(value2);
    try {
      await setAsync(key, value2);
    } catch (error) {
      console.error(`the \`${key}\` store's new value \`${value2}\` could not be persisted to localStorage because of ${error}`);
    }
  };
  return __spreadProps(__spreadValues({}, readableStore), { set });
};
var MacScrollbar_svelte_svelte_type_style_lang = "";
var ThemeToggle_svelte_svelte_type_style_lang = "";
const initialTheme = "dark";
localStorageStore("theme", initialTheme);
const Home = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"bg-[#E7EDF4] relative"}"><img class="${"flex justify-center absolute mt-4 inset-0 mx-auto w-full px-4"}" src="${"../arc.svg"}" alt="${""}">

  <div class="${"text-center pt-6"}">The Wedding of
  </div>
  
  <div class="${"flex justify-center py-8"}"><svg width="${"158"}" height="${"49"}" viewBox="${"0 0 158 49"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><path d="${"M59.8698 1.3665V1.6225C63.4538 2.3905 65.8218 3.4785 63.6458 9.0465L51.2938 40.7905L39.3258 9.0465C37.1498 3.3505 39.6458 2.0065 44.1258 1.6225V1.3665H26.0138C26.9738 2.1985 28.1898 4.0545 28.8298 5.7185L34.6538 20.6945L26.6538 40.7905L14.6858 9.0465C12.5098 3.3505 15.0058 2.0065 19.4858 1.6225V1.3665H1.37375C2.33375 2.1985 3.54975 4.0545 4.18975 5.7185L20.3178 47.2545L20.1258 48.5985L26.7818 43.9905L35.3577 22.5505L44.9578 47.2545L44.7658 48.5985L51.4218 43.9905L65.0538 9.1105C67.2298 3.5425 68.9578 2.3905 71.6458 1.6225V1.3665H59.8698Z"}" fill="${"#493333"}"></path><path d="${"M139.934 19.4145C133.214 17.8785 127.454 15.8945 127.454 9.1745C127.454 5.5905 129.054 1.4305 135.134 1.4305C142.174 1.4305 149.342 6.8705 148.19 15.6385L154.27 6.2945C150.878 3.0305 145.566 0.470501 138.142 0.470501C127.838 0.470501 121.118 5.3345 121.118 13.2065C121.118 18.7105 124.51 25.1745 136.926 28.0545C144.542 29.8465 148.83 31.4465 148.83 37.1425C148.83 40.5345 147.294 46.0385 139.806 46.0385C132.574 46.0385 125.022 40.5345 125.854 31.7025L119.966 41.0465C123.422 44.3745 129.502 47.0625 137.246 47.0625C148.51 47.0625 155.038 41.0465 155.038 33.2385C155.038 28.5025 152.542 22.2945 139.934 19.4145Z"}" fill="${"#493333"}"></path><line x1="${"98.1585"}" y1="${"5.13202"}" x2="${"87.4823"}" y2="${"44.132"}" stroke="${"#E5B9BA"}"></line></svg></div>
  

  <div class="${"mx-auto flex justify-center px-8 relative"}"><img src="${"/../coverhd.png"}" alt="${""}"></div>
  <div class="${"flex justify-center pt-10"}"><img src="${"/../divider.svg"}" alt="${""}"></div></div>`;
});
const Top = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"bg-[#E7EDF4] pt-4"}">
    
    
     <div class="${"pt-6 flex justify-center"}"><div></div>
        <img src="${"/../arbic.svg"}" alt="${""}"></div> 
    <div class="${"pb-8 w-full"}"><div class="${"text-2xl pt-6 pb-6 text-center font-sans text-[#6C7581] max-w-[240px] leading-6 mx-auto "}">Kami mengundang Anda untuk menghadiri pernikahan kami
        </div>
        <div class="${"text-center py-4 space-y"}"><h1 class="${"text-center text-3xl text-[#1B1B1B]"}">Winda Pratiwi</h1>
            <div class="${"text-[#888B96]"}">&amp;</div>
            <h1 class="${"text-center text-3xl text-[#1B1B1B]"}">Sam Rutherford</h1></div></div>
    <div class="${"grid grid-cols-3 mb-10 divide-x divide-[#E5B9BA] text-xl px-3 text-[#1B1B1B] text-center "}"><div class="${"px-4 h-32"}"><div class="${"text-[#6C7581] mb-4"}">Akad Nikah</div>
            <div class="${"font-bold text-2xl"}">16:00</div>
            <div>WIB</div>
            </div>
        <div class="${"text-center px-4"}"><div class="${"text-[#6C7581] mb-3"}">Oktober</div> 
            <div class="${"text-2xl"}">2</div>
            <div class="${"text-2xl"}">2022</div></div>
        

        <div class="${"px-4 h-44"}"><div class="${"text-[#6C7581] mb-4"}">Resepsi</div>
            <div class="${"font-bold text-xl"}">19:00 WIB</div>
            <div class="${"text-md font-sans"}">s/d</div>
            <div class="${"font-bold"}">21:00 WIB</div></div></div>
    
    <div class="${"pb-8 px-8"}"><h1 class="${"text-center font-bold text-lg text-[#6C7581] max-w-[270px] mx-auto mb-2"}">Dapur Siliwangi Resto &amp; Wedding Hall</h1>
        <h2 class="${"text-center text-2xl font-medium"}">Jl. Siliwangi No. 9, Depok, Pancoran Mas</h2></div>
    <div class="${"pb-8 text-center px-10"}"><a href="${"https://maps.app.goo.gl/utHG7eZcUhzTyHPi7?g_st=ic"}" target="${"_blank"}" class="${"w-full block px-4 bg-[#3A3C41] rounded-full py-4 text-xl text-white"}">Dapatkan Lokasi via Gmaps</a></div>
    <div class="${"flex justify-center"}"><img src="${"/../divider.svg"}" alt="${""}"></div>

    <h1 class="${"text-center text-2xl text-[#252627] my-8 pb-4"}">Protokol Kesehatan</h1>
    <div class="${"flex justify-between px-8 pb-6"}"><div class="${"flex-1 text-center"}"><div class="${"flex justify-center mb-2"}"><svg width="${"82"}" height="${"82"}" viewBox="${"0 0 82 82"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><circle cx="${"41"}" cy="${"41"}" r="${"41"}" fill="${"#CFD9E6"}"></circle><path d="${"M23.4133 28.1891C23.2098 28.1832 23.0022 28.1936 22.792 28.2199C21.1103 28.4301 19.8492 29.6559 19.604 31.3025C19.3237 32.6688 19.2188 34.0703 19.2188 35.4717C19.2188 41.5676 21.3557 47.1382 24.8591 51.3773C24.9292 51.4824 24.9991 51.5522 25.0692 51.6223C29.0981 56.3169 34.879 59.2949 41.2903 59.2949C47.7015 59.2949 53.4825 56.3169 57.5114 51.6223C57.5815 51.5522 57.6514 51.4824 57.7215 51.3773C61.2249 47.1732 63.3618 41.6027 63.3618 35.4717C63.3618 34.0703 63.2567 32.6688 63.0115 31.3025C62.7312 29.6559 61.4701 28.4301 59.8235 28.2199C58.1419 28.0097 56.6355 28.8502 55.9348 30.3917C55.3743 31.653 54.8838 32.984 54.5335 34.3153C54.1481 35.7517 53.9025 37.1535 53.7623 38.5899L51.6254 38.0295C44.8638 36.3128 37.7517 36.3128 30.9901 38.0295L28.8531 38.5899C28.713 37.1535 28.468 35.7167 28.0827 34.3153C27.7323 32.949 27.2419 31.653 26.6813 30.3917C26.0682 29.0429 24.8378 28.2303 23.4133 28.1891ZM23.0376 30.2864H23.2826C23.8081 30.2864 24.4391 30.532 24.7544 31.2327C25.2799 32.3888 25.7001 33.6146 26.0504 34.8408C26.5759 36.9078 26.8559 38.9751 26.8209 41.0772C26.8209 43.7047 26.366 46.2619 25.4551 48.6793C22.8626 45.0357 21.3208 40.4465 21.3208 35.4717C21.3208 34.1754 21.426 32.9141 21.6362 31.6528C21.7764 30.777 22.442 30.3915 23.0376 30.2864ZM59.3329 30.2864H59.5779C60.1734 30.3564 60.8391 30.7419 60.9792 31.6528C61.1894 32.9141 61.2947 34.2105 61.2947 35.4717C61.2596 40.4465 59.718 45.0357 57.1255 48.6793C55.5139 44.3 55.3038 39.5003 56.565 34.8408C56.8804 33.6146 57.3362 32.3888 57.8617 31.2327C58.177 30.532 58.8074 30.2864 59.3329 30.2864ZM41.2725 38.8875C44.5657 38.8875 47.8593 39.2901 51.065 40.0959L53.622 40.7268C53.587 43.7398 54.1125 46.753 55.1986 49.5907L55.5845 50.6062C51.976 54.6701 46.8958 57.1929 41.2903 57.1929C35.6848 57.1929 30.6047 54.6701 26.9612 50.6062L27.3464 49.5907C28.3624 46.8931 28.8879 44.0199 28.9229 41.1121V40.7617L31.4807 40.0959C34.6863 39.2901 37.9793 38.8875 41.2725 38.8875ZM41.2725 43.6958C38.0581 43.6958 34.844 43.9324 31.6559 44.4054C31.0953 44.4755 30.71 45.0362 30.78 45.5967C30.8851 46.1222 31.3055 46.5075 31.8311 46.5075C31.8661 46.5075 31.9363 46.5076 31.9713 46.4726C38.1373 45.5617 44.4083 45.5617 50.5743 46.4726C51.1349 46.5777 51.6956 46.1573 51.7656 45.5967C51.8707 45.0362 51.4503 44.4755 50.8898 44.4054C47.7017 43.9324 44.4869 43.6958 41.2725 43.6958ZM51.8348 49.8186C51.7656 49.817 51.6954 49.8226 51.6254 49.8357C44.7587 50.9918 37.8219 50.9918 30.9552 49.8357C30.3596 49.7656 29.8341 50.151 29.729 50.7116C29.6589 51.3071 30.0443 51.8327 30.6049 51.9378C34.1433 52.5333 37.7168 52.8136 41.2903 52.8136C44.8638 52.8136 48.4373 52.4983 51.9757 51.9378C52.5713 51.8327 52.9567 51.2721 52.8516 50.7116C52.7596 50.1904 52.319 49.8301 51.8348 49.8186Z"}" fill="${"#3A3C41"}"></path></svg></div>
            <div class="${"max-w-[100px] mx-auto"}">Memakai Masker</div></div>
        <div class="${"flex-1 text-center"}"><div class="${"flex justify-center mb-2"}"><svg width="${"82"}" height="${"82"}" viewBox="${"0 0 82 82"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><circle cx="${"41"}" cy="${"41"}" r="${"41"}" fill="${"#CFD9E6"}"></circle><g clip-path="${"url(#clip0_353_2064)"}"><path d="${"M56.0867 45.132C55.7023 44.7477 55.0938 44.7477 54.7414 45.132C54.5492 45.3242 54.4531 45.5805 54.4531 45.8047C54.4531 46.0289 54.5492 46.2852 54.7414 46.4773L57.9125 49.6484H24.0875L27.2586 46.4773C27.4508 46.2852 27.5469 46.0289 27.5469 45.8047C27.5469 45.5805 27.4508 45.3242 27.2586 45.132C26.8742 44.7477 26.2656 44.7477 25.9133 45.132L21.1086 49.9367C20.7242 50.3211 20.7242 50.9297 21.1086 51.282L25.9133 56.0867C26.2977 56.4711 26.9063 56.4711 27.2586 56.0867C27.643 55.7023 27.643 55.0938 27.2586 54.7414L24.0875 51.5703H57.8805L54.7094 54.7414C54.325 55.1258 54.325 55.7344 54.7094 56.0867C55.0938 56.4711 55.7023 56.4711 56.0547 56.0867L60.8594 51.282C61.2438 50.8977 61.2438 50.2891 60.8594 49.9367L56.0867 45.132ZM34.9141 41C35.4586 41 35.875 40.5836 35.875 40.0391V29.1484C35.875 28.6039 35.4586 28.1875 34.9141 28.1875H32.3516C31.807 28.1875 31.3906 28.6039 31.3906 29.1484C31.3906 29.693 31.807 30.1094 32.3516 30.1094H33.9531V40.0391C33.9531 40.5836 34.3695 41 34.9141 41ZM39.2703 41C39.7828 41.0641 40.2953 40.7117 40.3594 40.1992L41.3203 33.6328L43.2742 40.3273C43.4023 40.7438 43.7547 41.032 44.2031 41.032C44.6516 41.032 45.0039 40.7438 45.132 40.3273L47.0859 33.6328L48.0469 40.1992C48.1109 40.6797 48.5273 41.032 49.0078 41.032C49.0398 41.032 49.1039 41.032 49.1359 41.032C49.6484 40.968 50.0328 40.4555 49.9367 39.943L48.3352 29.0523C48.2711 28.6039 47.8867 28.2516 47.4383 28.2195C46.9898 28.1875 46.5734 28.4758 46.4453 28.8922L44.2031 36.6438L41.9289 28.8922C41.8008 28.4438 41.3844 28.1555 40.9359 28.2195C40.4875 28.2516 40.1031 28.6039 40.0391 29.0523L38.4375 39.943C38.3734 40.4234 38.7258 40.9039 39.2703 41Z"}" fill="${"#3A3C41"}"></path></g><defs><clipPath id="${"clip0_353_2064"}"><rect width="${"41"}" height="${"41"}" fill="${"white"}" transform="${"translate(20.5 20.5)"}"></rect></clipPath></defs></svg></div>
            <div class="${"max-w-[100px] mx-auto"}">Menjaga Jarak</div></div></div>
    <div class="${"flex justify-between px-8 pb-6"}"><div class="${"flex-1 text-center"}"><div class="${"flex justify-center mb-2"}"><svg width="${"82"}" height="${"82"}" viewBox="${"0 0 82 82"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><circle cx="${"41"}" cy="${"41"}" r="${"41"}" fill="${"#CFD9E6"}"></circle><path d="${"M53.1793 24.0387V27.9435C53.1793 29.5704 51.8748 30.872 50.2441 30.872H33.9377C32.3071 30.872 31.0025 29.5704 31.0025 27.9435V24.0387C31.0025 23.4855 30.5786 23.0625 30.0242 23.0625C29.4697 23.0625 29.0458 23.4855 29.0458 24.0387V27.9435C29.0458 30.6442 31.2308 32.8244 33.9377 32.8244H38.5035V36.4038C38.5035 36.9569 38.9275 37.38 39.4819 37.38H44.6999C45.2544 37.38 45.6783 36.9569 45.6783 36.4038V32.8244H50.2441C52.951 32.8244 55.1361 30.6442 55.1361 27.9435V24.0387C55.1361 23.4855 54.7121 23.0625 54.1577 23.0625C53.6033 23.0625 53.1793 23.4855 53.1793 24.0387ZM43.7216 35.4276H40.4603V32.8244H43.7216V35.4276ZM43.0693 44.5387V41.2847C43.0693 40.7315 42.6453 40.3085 42.0909 40.3085C41.5365 40.3085 41.1125 40.7315 41.1125 41.2847V44.5387C41.1125 45.0919 41.5365 45.5149 42.0909 45.5149C42.6453 45.5149 43.0693 45.0919 43.0693 44.5387ZM58.6909 53.7149C59.0496 52.8038 59.017 51.8276 58.593 50.9165C57.7777 49.1919 55.6579 48.3784 53.8315 49.1593L53.2445 49.4196L53.0815 49.0617C52.7227 48.1831 52.0052 47.4998 51.1247 47.1419C50.2441 46.8165 49.2657 46.8165 48.3852 47.2069L42.1235 49.9403C42.0583 49.9077 41.9931 49.8752 41.9279 49.8427L33.4811 46.0681C29.8937 44.4736 25.7193 44.9617 22.5884 47.3371C22.1645 47.6625 22.0666 48.2808 22.3927 48.7038C22.7189 49.1268 23.3385 49.2244 23.7625 48.899C26.3389 46.9466 29.7306 46.5562 32.6984 47.8577L41.1125 51.5998C41.406 51.73 41.6343 51.9252 41.83 52.2181C42.1235 52.6736 42.1561 53.2593 41.9605 53.7474C41.8952 53.9101 41.7974 54.0403 41.6996 54.1704C41.2104 54.6911 40.4603 54.8863 39.808 54.5935L33.2854 51.6974C32.7962 51.4696 32.2092 51.6974 31.9809 52.1855C31.7526 52.6736 31.9809 53.2593 32.4701 53.4871L38.9927 56.3831C39.4819 56.6109 39.9711 56.7085 40.4603 56.7085C41.4713 56.7085 42.4497 56.2855 43.1345 55.5046C43.3628 55.2442 43.5585 54.9189 43.7216 54.5935C44.1781 53.5847 44.1129 52.4133 43.5911 51.4696L49.1353 49.0617C49.5266 48.899 49.9832 48.899 50.3746 49.0617C50.7659 49.2244 51.0921 49.5498 51.2551 49.9403L51.4182 50.2657L47.1459 52.0228C46.6567 52.2181 46.4284 52.8038 46.6241 53.2919C46.8198 53.78 47.4068 54.0077 47.896 53.8125L54.5816 50.9815C55.4296 50.6236 56.4406 50.949 56.7993 51.7625C56.995 52.153 56.995 52.6085 56.8319 53.0315C56.6689 53.4546 56.3427 53.78 55.9514 53.9427L37.5577 61.6871C36.0901 62.3054 34.3943 62.2728 32.9919 61.5569L23.9255 57.0014C23.5994 56.8387 23.2081 56.8712 22.9145 57.0665L18.3487 60.3204C17.9248 60.6458 17.7943 61.2315 18.1205 61.6871C18.4466 62.1101 19.0336 62.2403 19.4902 61.9149L23.5668 59.0189L32.1114 63.3141C33.155 63.8347 34.2638 64.0625 35.4053 64.0625C36.3837 64.0625 37.3947 63.8673 38.3404 63.4768L56.7341 55.7323C57.6473 55.3419 58.3321 54.626 58.6909 53.7149Z"}" fill="${"#3A3C41"}"></path></svg></div>
            <div class="${"max-w-[100px] mx-auto"}">Mencuci Tangan</div></div>
        <div class="${"flex-1 text-center"}"><div class="${"flex justify-center mb-2"}"><svg width="${"82"}" height="${"82"}" viewBox="${"0 0 82 82"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><circle cx="${"41"}" cy="${"41"}" r="${"41"}" fill="${"#CFD9E6"}"></circle><g clip-path="${"url(#clip0_353_2069)"}"><path d="${"M60.2188 46.4453H57.2719C57.0797 46.4453 56.8875 46.5094 56.7273 46.6055C56.6633 46.6375 56.6312 46.6695 56.5672 46.7336L54.8055 48.4953C54.4211 48.8797 54.4211 49.4883 54.8055 49.8406C54.9977 50.0328 55.2539 50.1289 55.4781 50.1289C55.7023 50.1289 55.9586 50.0328 56.1508 49.8406L57.6562 48.3672H60.2188C60.7633 48.3672 61.1797 47.9508 61.1797 47.4062C61.1797 46.8617 60.7633 46.4453 60.2188 46.4453ZM32.0953 54.4531C32.768 55.1258 33.6328 55.4781 34.5938 55.4781C34.9461 55.4781 35.3305 55.4141 35.6508 55.318C35.7789 55.9906 36.0992 56.6313 36.6117 57.1438C37.7008 58.2328 39.3664 58.457 40.6797 57.8164C40.8398 58.393 41.1281 58.9695 41.6086 59.418C42.2813 60.0906 43.2102 60.443 44.107 60.443C45.0039 60.443 45.9008 60.0906 46.6055 59.418L49.8406 56.1828C50.225 55.7984 50.225 55.1898 49.8406 54.8375C49.4562 54.4531 48.8477 54.4531 48.4953 54.8375L45.2602 58.0727C44.6516 58.6813 43.6266 58.6813 42.9859 58.0727C42.3773 57.4641 42.3773 56.4391 42.9859 55.7984L45.7086 53.0758C46.093 52.6914 46.093 52.0828 45.7086 51.7305C45.3242 51.3461 44.7156 51.3461 44.3633 51.7305L40.2953 55.7984C39.975 56.1187 39.5906 56.2789 39.1422 56.2789C38.6938 56.2789 38.3094 56.1187 37.9891 55.7984C37.7008 55.5102 37.5406 55.0937 37.5406 54.6773C37.5406 54.2609 37.7008 53.8445 38.0211 53.5562L41.1922 50.3852C41.5766 50.0008 41.5766 49.3922 41.1922 49.0398C40.8078 48.6555 40.1992 48.6555 39.8469 49.0398L36.6117 52.2109L35.7148 53.1078C35.1063 53.7164 34.0813 53.7484 33.4406 53.1078C32.832 52.4672 32.832 51.4742 33.4406 50.8336L34.1133 50.1609L34.3375 49.9367L37.957 46.3172C38.3414 45.9328 38.3414 45.3242 37.957 44.9719C37.5727 44.5875 36.9641 44.5875 36.6117 44.9719L32.9922 48.5594C32.7039 48.8477 32.2875 49.0398 31.8711 49.0398C31.4547 49.0398 31.0383 48.8797 30.718 48.5594C30.1094 47.9508 30.1094 46.9258 30.718 46.3172L35.3305 41.7047C35.7148 41.3203 35.7148 40.7117 35.3305 40.3594C34.9461 39.975 34.3375 39.975 33.9852 40.3594L29.3727 44.9398C27.9953 46.3172 27.9953 48.5273 29.3727 49.9047C29.8852 50.4172 30.5578 50.7695 31.2305 50.8977C30.8461 52.1148 31.1344 53.4922 32.0953 54.4531ZM47.15 38.5977C46.7336 38.5977 46.3172 38.4375 45.9969 38.1492L42.5695 34.85C42.1852 34.4977 41.5766 34.4977 41.2242 34.882C40.8719 35.2664 40.8719 35.875 41.2563 36.2273L44.6836 39.5266C45.3562 40.1672 46.2211 40.5195 47.118 40.5195C47.15 40.5195 47.182 40.5195 47.182 40.5195C48.1109 40.4875 49.0078 40.1031 49.6484 39.4305C50.9937 38.0211 50.9617 35.7789 49.5523 34.4336L45.6766 30.718C43.2422 28.3797 39.4305 28.2195 36.8039 30.3336C36.3875 30.6539 36.3234 31.2625 36.6438 31.6789C36.9641 32.0953 37.5727 32.1594 37.9891 31.8391C39.8469 30.3336 42.6016 30.4617 44.3313 32.1273L48.2391 35.875C48.8797 36.4836 48.9117 37.5086 48.2711 38.1492C47.9828 38.4055 47.5984 38.5977 47.15 38.5977ZM60.2188 33.6328H53.3961C52.8516 33.6328 52.4352 34.0492 52.4352 34.5938C52.4352 35.1383 52.8516 35.5547 53.3961 35.5547H60.2188C60.7633 35.5547 61.1797 35.1383 61.1797 34.5938C61.1797 34.0492 60.7633 33.6328 60.2188 33.6328ZM28.3156 33.6969H21.7812C21.2367 33.6969 20.8203 34.1133 20.8203 34.6578C20.8203 35.2023 21.2367 35.6188 21.7812 35.6188H28.3156C28.8602 35.6188 29.2766 35.2023 29.2766 34.6578C29.2766 34.1133 28.8602 33.6969 28.3156 33.6969ZM21.7812 48.3672H24.9844C25.5289 48.3672 25.9453 47.9508 25.9453 47.4062C25.9453 46.8617 25.5289 46.4453 24.9844 46.4453H21.7812C21.2367 46.4453 20.8203 46.8617 20.8203 47.4062C20.8203 47.9508 21.2367 48.3672 21.7812 48.3672ZM60.2188 61.1797C60.475 61.1797 60.6992 61.0836 60.8914 60.8914C61.2758 60.507 61.2758 59.8984 60.8914 59.5461L25.657 24.3117C25.2727 23.9273 24.6641 23.9273 24.3117 24.3117C23.9273 24.6961 23.9273 25.3047 24.3117 25.657L59.5461 60.8914C59.7063 61.0836 59.9625 61.1797 60.2188 61.1797Z"}" fill="${"#3A3C41"}"></path></g><defs><clipPath id="${"clip0_353_2069"}"><rect width="${"41"}" height="${"41"}" fill="${"white"}" transform="${"translate(20.5 20.5)"}"></rect></clipPath></defs></svg></div>
            <div class="${"max-w-[100px] mx-auto"}">Menghindari Kontak Fisik</div></div></div></div>`;
});
const Gift = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"bg-[#E7EDF4] px-8 text-center pt-10"}"><div class="${"w-full"}"><h1 class="${"text-center text-2xl text-[#252627] mb-4"}">Wedding Gift</h1>
       <p>Bagi Keluarga dan Sahabat yang ingin mengirimkan Hadiah, Silahkan mengirimkannya melalui :</p></div>
    <div class="${"space-y-10 py-10"}"><div class="${"bg-[#CFD9E6] max-w-[280px] mx-auto rounded-xl py-6"}"><div class="${"flex justify-center pb-4"}"><svg width="${"168"}" height="${"54"}" viewBox="${"0 0 168 54"}" fill="${"none"}" xmlns="${"http://www.w3.org/2000/svg"}"><path d="${"M5.16796 5.43352C12.4072 1.79318 19.9211 0 27.6868 0C27.7417 0 27.7967 0 27.8516 0C27.9065 0 27.9615 0 28.0164 0C35.7821 0 43.296 1.79318 50.5352 5.43352L50.9792 5.89475C53.934 12.739 55.6208 19.7204 55.7032 26.8099C55.7032 26.9449 55.7032 27.0529 55.7032 27.1901V27.6783C55.6757 34.4956 54.1835 41.45 50.9792 48.5125L50.4803 48.9737C42.9389 52.2608 35.3953 53.9168 27.8516 54C20.3079 53.9168 12.7643 52.2608 5.22289 48.9737L4.72394 48.5125C1.51972 41.45 0.0274648 34.4956 0 27.6783V27.1901C0 27.0529 0 26.9449 0 26.8099C0.0823944 19.7204 1.76919 12.739 4.72394 5.89475L5.16796 5.43352V5.43352ZM27.8516 1.84717C27.7967 1.84717 27.7417 1.84717 27.6868 1.84717C20.3079 1.84717 13.2083 3.5301 6.32835 6.92521C3.53609 13.4454 1.96144 20.0737 1.87905 26.8369C1.76919 33.5461 3.17676 40.4173 6.29859 47.4258C13.4829 50.4946 20.6673 52.0696 27.8516 52.1528C35.0359 52.0696 42.2203 50.4946 49.4023 47.4258C52.5264 40.4173 53.934 33.5461 53.8241 26.8369C53.7417 20.0737 52.1671 13.4454 49.3748 6.92521C42.4949 3.5301 35.3953 1.84717 28.0164 1.84717C27.9615 1.84717 27.9065 1.84717 27.8516 1.84717V1.84717Z"}" fill="${"#3A3C41"}"></path><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M28.348 42.0755C27.9612 36.8873 28.2107 31.4807 26.636 26.5377C25.1712 21.9209 19.6165 19.2862 19.5066 14.2059C19.3968 10.2394 22.4637 5.64955 28.2107 5.64955C33.5984 5.62256 36.9422 9.47889 37.329 13.7717C37.7982 18.7418 31.6644 22.0829 30.0623 26.8099C28.4029 31.645 28.8744 36.9952 28.348 42.0755Z"}" fill="${"#3A3C41"}"></path><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M30.4765 40.8247C30.2545 36.3159 30.2545 31.9983 31.5271 28.1667C32.9346 23.8221 35.8642 20.1548 40.341 18.9601C43.4079 18.1456 47.9098 21.6757 47.1934 25.2891C46.5846 28.196 43.6276 31.6181 38.8762 31.9983C36.6653 32.1873 35.7269 33.9265 34.3445 34.9322C40.5332 34.3337 44.5408 31.9443 47.3308 29.4446C47.745 31.5618 48.022 35.1212 46.3352 36.3429C43.0211 38.6513 39.9542 36.7771 36.0565 37.8638C33.8753 38.4893 32.5204 39.8482 30.4765 40.8247Z"}" fill="${"#3A3C41"}"></path><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M26.2493 40.8247C26.4964 36.3159 26.469 31.9983 25.2262 28.1667C23.8163 23.8221 20.8891 20.1548 16.4123 18.9601C13.3454 18.1456 8.8137 21.6757 9.55982 25.2891C10.1686 28.196 13.1234 31.6181 17.8771 31.9983C20.0605 32.1873 21.0264 33.9265 22.4088 34.9322C16.1903 34.3337 12.2125 31.9443 9.4225 29.4446C9.00824 31.5618 8.7313 35.1212 10.4158 36.3429C13.7322 38.6513 16.7991 36.7771 20.6945 37.8638C22.878 38.4893 24.2031 39.8482 26.2493 40.8247Z"}" fill="${"#3A3C41"}"></path><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M40.9749 47.5336V46.8001L41.5288 46.6651L40.9749 45.8507V44.4917L43.4628 47.8868L42.5793 48.1051L41.9705 47.2614L40.9749 47.5336V47.5336ZM40.9749 44.4917V45.8507L40.5881 45.3062L40.4234 46.9374L40.9749 46.8001V47.5336L40.341 47.6708L40.2288 48.6743L39.3454 48.8925L39.9267 44.4647L40.8102 44.2465L40.9749 44.4917V44.4917ZM32.7424 49.8982V49.1918H32.9346C33.239 49.1648 33.4336 49.1378 33.516 49.1085C33.6258 49.0815 33.7357 49.0005 33.7929 48.9195C33.8753 48.8115 33.9028 48.7013 33.9028 48.5663C33.8753 48.4313 33.8478 48.3211 33.7631 48.2401C33.7082 48.1591 33.5984 48.1051 33.4885 48.0781C33.3786 48.0511 33.1292 48.0511 32.7424 48.0781V47.3716C32.9621 47.3716 33.1017 47.3446 33.1566 47.3446C33.294 47.3176 33.4061 47.2344 33.4885 47.1534C33.5709 47.0724 33.5984 46.9644 33.5709 46.8271C33.5709 46.6921 33.516 46.5841 33.4336 46.5279C33.3786 46.4469 33.2665 46.3929 33.1017 46.3929C33.0468 46.3929 32.9346 46.3929 32.7424 46.4199V45.7134C33.0468 45.6864 33.2665 45.6864 33.4061 45.7134C33.5709 45.7134 33.7357 45.7697 33.8753 45.8507C34.0126 45.9047 34.1225 46.0127 34.2346 46.1477C34.317 46.2849 34.3719 46.4469 34.3994 46.6381C34.4269 46.8271 34.372 47.0184 34.2896 47.1804C34.2072 47.3446 34.0675 47.4796 33.8753 47.5876C34.1499 47.6438 34.3719 47.7518 34.5093 47.9138C34.6763 48.0781 34.7587 48.2671 34.7862 48.5123C34.7862 48.7013 34.7587 48.8925 34.7038 49.0815C34.6214 49.2728 34.5093 49.4078 34.3719 49.545C34.2072 49.653 34.0401 49.734 33.8204 49.788C33.6808 49.815 33.3214 49.842 32.7973 49.8982H32.7424V49.8982ZM37.963 47.6146L38.8212 47.7248C38.7663 48.1861 38.6267 48.5663 38.3795 48.8385C38.13 49.0815 37.7707 49.2728 37.329 49.3538C36.7751 49.4348 36.2785 49.3268 35.8642 49.0275C35.4225 48.7013 35.173 48.2401 35.0357 47.5876C34.9235 46.9104 35.0082 46.3389 35.3103 45.9047C35.5873 45.4704 36.029 45.1982 36.6103 45.0902C37.1345 45.007 37.5487 45.0902 37.9355 45.3332C38.1575 45.4704 38.3498 45.6864 38.4894 46.0127L37.6883 46.3389C37.6059 46.1477 37.4663 45.9857 37.3015 45.9047C37.107 45.7967 36.9147 45.7697 36.6927 45.7967C36.3883 45.8507 36.1686 46.0127 36.0015 46.2579C35.8367 46.5279 35.8093 46.8834 35.8917 47.3716C36.0015 47.8868 36.1686 48.2401 36.3883 48.4313C36.6103 48.6203 36.8873 48.7013 37.1894 48.6473C37.4114 48.5933 37.5785 48.4853 37.7158 48.3211C37.8531 48.1591 37.9355 47.9138 37.963 47.6146V47.6146ZM32.7424 45.7134V46.4199C32.6325 46.4199 32.5204 46.4469 32.383 46.4469L31.8864 46.5031L31.9688 47.4526L32.5478 47.3986C32.6028 47.3986 32.6874 47.3986 32.7424 47.3716V48.0781C32.7424 48.0781 32.7424 48.0781 32.7149 48.0781L32.0512 48.1321L32.1336 49.2458L32.7424 49.1918V49.8982L31.36 50.0332L30.9732 45.8777L32.66 45.7427C32.6874 45.7134 32.7149 45.7134 32.7424 45.7134V45.7134ZM27.4096 48.4583V47.7518C27.6019 47.7518 27.714 47.7248 27.7964 47.6978C27.9063 47.6708 27.9887 47.5876 28.0734 47.5066C28.1283 47.3986 28.1557 47.2906 28.1557 47.1804C28.1832 47.0184 28.1283 46.9104 28.0436 46.8001C27.9612 46.6921 27.8513 46.6381 27.714 46.6111C27.6293 46.6111 27.5469 46.5841 27.4096 46.5841V45.8777C27.8239 45.8777 28.0734 45.9047 28.2107 45.9587C28.4602 46.0127 28.6524 46.1477 28.8195 46.3659C28.9843 46.5841 29.0667 46.8541 29.0392 47.1804C29.0392 47.4256 28.9843 47.6438 28.9019 47.8328C28.7897 47.9948 28.6799 48.1321 28.5425 48.2401C28.3755 48.3211 28.2381 48.3751 28.0734 48.4313C27.9063 48.4583 27.6866 48.4583 27.4096 48.4583V48.4583ZM27.4096 45.8777V46.5841C27.3272 46.5841 27.2151 46.5841 27.0778 46.5841L26.6635 46.5571V47.7518H27.1052C27.2151 47.7518 27.3272 47.7518 27.4096 47.7518V48.4583C27.3547 48.4583 27.27 48.4583 27.1876 48.4583H26.636L26.6086 50.0332L25.7503 50.0062L25.835 45.8507L27.1876 45.8777C27.27 45.8777 27.3547 45.8777 27.4096 45.8777V45.8777ZM19.4242 48.0511V46.7731C19.6737 46.8271 19.8385 46.8271 19.9209 46.8271C20.033 46.8001 20.1154 46.7731 20.1978 46.6921C20.2528 46.6111 20.3077 46.5279 20.3351 46.3929C20.3626 46.2579 20.3351 46.1477 20.2802 46.0397C20.2253 45.9317 20.1154 45.8777 19.9758 45.8237C19.9209 45.7967 19.7286 45.7697 19.4242 45.7134V45.007L19.7836 45.0632C20.2253 45.1442 20.5297 45.2252 20.7219 45.3332C20.9165 45.4434 21.0538 45.6054 21.1362 45.8237C21.2209 46.0127 21.2484 46.2579 21.1934 46.5031C21.1362 46.8001 20.9989 47.0454 20.7792 47.2074C20.5846 47.3716 20.2802 47.4526 19.8934 47.4526C20.0605 47.5876 20.1978 47.7248 20.2802 47.8598C20.3901 48.0241 20.5022 48.2671 20.6396 48.6203L20.9989 49.518L20.0033 49.3268L19.5616 48.3211C19.5066 48.2401 19.4792 48.1321 19.4242 48.0511V48.0511ZM21.8549 45.4704L22.6834 45.5514L22.4911 47.8058C22.4637 48.1591 22.4637 48.4043 22.4637 48.4853C22.4911 48.6743 22.5735 48.8115 22.6834 48.9195C22.823 49.0545 22.9878 49.1085 23.2373 49.1378C23.4867 49.1648 23.679 49.1085 23.7888 49.0275C23.9285 48.9465 24.0109 48.8385 24.0658 48.7013C24.0932 48.5663 24.1207 48.3211 24.1482 47.9948L24.3427 45.6864L25.1987 45.7697L25.0065 47.9408C24.979 48.4583 24.9218 48.8115 24.8394 49.0005C24.7844 49.1918 24.6746 49.3808 24.5624 49.4888C24.4251 49.626 24.2329 49.734 24.0109 49.788C23.8163 49.8712 23.5417 49.8713 23.2098 49.842C22.7955 49.815 22.4911 49.734 22.2966 49.626C22.1043 49.518 21.9373 49.3808 21.8274 49.2458C21.7175 49.0815 21.6626 48.9195 21.6351 48.7575C21.6077 48.5123 21.6077 48.1591 21.6351 47.6978L21.8549 45.4704V45.4704ZM15.142 46.6921L15.3068 46.0127L17.1035 46.4739L16.6617 48.0781C16.4397 48.2131 16.1628 48.2941 15.776 48.3211C15.4167 48.3481 15.0871 48.3211 14.7552 48.2401C14.3112 48.1321 13.9542 47.9408 13.7047 47.6978C13.4278 47.4256 13.263 47.0994 13.1806 46.7461C13.1234 46.3659 13.1234 45.9857 13.2355 45.6054C13.3454 45.1982 13.5376 44.845 13.8145 44.5457C14.064 44.2757 14.3959 44.1115 14.7827 44.0305C15.0871 43.9495 15.4441 43.9765 15.8332 44.0845C16.3299 44.2195 16.7167 44.4107 16.9364 44.71C17.1584 44.98 17.2682 45.3332 17.2408 45.7134L16.3848 45.6594C16.3848 45.4434 16.3299 45.2522 16.1903 45.0902C16.0529 44.953 15.8881 44.818 15.6387 44.764C15.2793 44.683 14.9749 44.71 14.698 44.872C14.4234 45.0362 14.2288 45.3602 14.0915 45.7967C13.9542 46.2849 13.9816 46.6651 14.119 46.9644C14.2837 47.2614 14.5332 47.4526 14.8651 47.5336C15.0573 47.5876 15.2244 47.5876 15.4167 47.5876C15.6112 47.5606 15.776 47.5066 15.9431 47.4526L16.0804 46.9374L15.142 46.6921V46.6921ZM19.4242 45.007L17.9869 44.764L17.2682 48.8655L18.0968 49.0005L18.4012 47.2906L18.5957 47.3176C18.788 47.3446 18.9276 47.3986 19.01 47.4256C19.0924 47.4796 19.1473 47.5606 19.2297 47.6438C19.2572 47.7248 19.3418 47.8598 19.4242 48.0511V46.7731C19.3418 46.7731 19.2572 46.7461 19.1473 46.7461L18.5408 46.6381L18.7056 45.6054L19.3693 45.7134C19.3968 45.7134 19.4242 45.7134 19.4242 45.7134V45.007V45.007Z"}" fill="${"#3A3C41"}"></path><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M151.111 39.9292V32.2683H154.537V18.7959L151.111 25.5321V8.71855H164.567L167.993 47.4529H154.537V39.9292H151.111V39.9292ZM151.111 8.71855V25.5321L147.685 32.2683H151.111V39.9292H144.645L141.993 47.0457H133.648V38.1901L142.959 18.4426H141.052L146.357 8.71855H151.111V8.71855ZM133.648 21.6218L137.82 11.8977L133.648 9.61626V21.6218ZM100.464 17.9004C100.658 16.7867 100.658 15.7 100.464 14.6673V17.9004ZM133.648 9.61626V21.6218L133.097 22.9245C124.862 17.1399 112.704 22.4092 112.013 28.52C111.324 34.903 116.27 40.0642 128.897 36.2079L124.557 47.6149C107.898 49.4351 101.432 42.9441 100.464 35.3664V31.0736C100.713 29.0914 101.237 27.1633 101.956 25.3701C110.163 5.32344 123.479 9.83225 128.537 9.45202L129.283 7.22461L133.648 9.61626V9.61626ZM133.648 38.1901L129.476 47.0457H133.648V38.1901ZM85.4886 46.8005C94.4123 45.0635 103.171 34.5227 94.3849 26.1306C97.8111 24.3374 99.9396 21.1065 100.464 17.9004V14.6673C99.8572 11.3262 97.2321 8.61055 92.2861 8.52955L85.4886 8.39231V15.835H88.306C91.318 15.835 90.9312 23.4959 87.1731 23.4959H85.4886V29.3637C89.5511 30.1242 88.1138 35.6634 85.4886 37.3756V46.8005V46.8005ZM100.464 31.0736V35.3664C100.299 33.9535 100.299 32.5136 100.464 31.0736ZM73.7176 8.14932L68.2201 18.6339L70.6782 18.4426L64.0477 47.0457H83.0305C83.859 47.0457 84.6601 46.9647 85.4886 46.8005V37.3756C85.0194 37.7018 84.493 37.8908 83.9689 37.8908H77.1439L79.4097 29.2804H84.5204C84.8798 29.2804 85.2116 29.3074 85.4886 29.3637V23.4959H80.7349L82.6414 15.835H85.4886V8.39231L73.7176 8.14932V8.14932Z"}" fill="${"#3A3C41"}"></path></svg></div>
            <div><div class="${"text-[#6C7581] text-lg mb-2 "}">Winda Pratiwi</div>
                <div class="${"text-2xl"}">6041632426</div></div></div>
        <div class="${"flex justify-center"}"><img src="${"/../qr.png"}" alt="${""}"></div></div>
    <div class="${"flex justify-center"}"><img src="${"/../divider.svg"}" alt="${""}"></div></div>`;
});
const Rsvp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"bg-[#E7EDF4] pt-10 "}"><div class="${"pb-8 w-full"}"><h1 class="${"text-center text-2xl text-[#252627]"}">Reservasi Kehadiran</h1></div>

      
${`${`${`<form class="${"mx-auto px-10 space-y-6 pb-10"}"><div class="${"text-center"}"><label for="${"name"}" class="${"pb-2 block"}"><span>Name</span></label>
            <input type="${"text"}" class="${"w-full bg-[#CFD9E6] text-xl font-bold rounded-full border-none placeholder-[#6C7581] text-black h-14 text-center focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500"}" name="${"name"}" aria-label="${"name"}" placeholder="${"Enter your name"}" required></div>
      <div class="${"text-center"}"><label class="${"pb-2 block"}"><span>Can you attend?</span></label>
            <select name="${"status"}" class="${"w-full text-center text-xl font-bold bg-[#CFD9E6] pl-10 rounded-full border-none placeholder-slate-400 text-black h-14 text-center focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500"}"><option value="${"Coming"}">Comming</option><option value="${"Not Coming"}">Not Coming</option></select></div>
      <div class="${"text-center"}"><fieldset class="${"mt-4"}"><legend class="${"sr-only"}">Bringing</legend>
                  <div class="${"flex justify-center"}"><div class="${"flex items-center pr-4"}"><input id="${"Just Me"}" value="${"Just Me"}" name="${"extra"}" type="${"radio"}" checked class="${"h-4 w-4 border-gray-300 text-[#3A3C41] focus:ring-[#3A3C41]"}">
                      <label for="${"Just Me"}" class="${"ml-3 block text-md font-medium text-gray-700"}">Just Me</label></div>
                    <div class="${"flex items-center"}"><input id="${"+1"}" value="${"+1"}" name="${"extra"}" type="${"radio"}" class="${"h-4 w-4 border-gray-300 text-[#3A3C41] focus:ring-[#3A3C41]"}">
                      <label for="${"+1"}" class="${"ml-3 block text-md font-medium text-gray-700"}">+1 Person</label></div></div></fieldset> 

            
            </div>
      
      <div class="${"text-center "}"><input class="${"w-full bg-[#3A3C41] text-white rounded-full h-10"}" type="${"submit"}"></div></form>`}`}`}
      <div class="${"flex justify-center"}"><img src="${"/../divider.svg"}" alt="${""}"></div></div>`;
});
const Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"bg-[#E7EDF4] px-8 text-center pt-10 pb-24"}"><div class="${"max-w-[200px] mx-auto"}"><h1 class="${"text-center text-2xl text-[#252627] mb-4"}">Final Words</h1>
        <p>Sayangi keluarga kita bersama dengan selalu mengenakan masker, mengingat kita masih dalam situasi pandemi COVID 19
        </p>    


       </div></div>`;
});
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<div id="${"home"}">${validate_component(Home, "Home").$$render($$result, {}, {}, {})}</div>
<div id="${"date"}">${validate_component(Top, "Top").$$render($$result, {}, {}, {})}</div>
<div id="${"rsvp"}">${validate_component(Rsvp, "Rsvp").$$render($$result, {}, {}, {})}</div>
<div id="${"gift"}">${validate_component(Gift, "Gift").$$render($$result, {}, {}, {})}</div>
${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}

      
      <div class="${"fixed max-w-[400px] mx-auto inset-x-0 bottom-0 py-4 bg-white"}">
        <div class="${"flex justify-between items-center space-x-4 w-full px-8"}">
          <div class="${"text-center text-[#1A2637]"}"><div class="${"flex justify-center"}"></div>
            <div class="${"font-bold text-md"}">Home</div></div>
          
          
          
          <div class="${"text-center text-[#1A2637]"}"><div class="${"flex justify-center"}"></div>
            <div class="${"font-bold text-md"}">Date</div></div>
          
          <div class="${"text-center text-[#1A2637]"}"><div class="${"flex justify-center"}"></div>
            <div class="${"font-bold text-md"}">RSVP</div></div>
          
          <div class="${"text-center text-[#1A2637]"}"><div class="${"flex justify-center"}"></div>
            <div class="${"font-bold text-md"}">Gift</div></div></div></div>



  `;
});
export { Routes as default };
